import { AM_BANK_METADATA } from "../configs";
import { BANK_WIRE_INSTRUCTION, SIGNET_TRANSFER_INSTRUCTION, BASIC_INSTRUCTION } from "../constants";
import { CURRENCIES, BANK_TRANSFER_FORMS } from "../enums";

export const bankFormsMap = [
  {
    name: "Australian Bank Transfer",
    id: "@jira(BCTGWEBPWU-436)",
    currency: CURRENCIES.AUD,
    form: BANK_TRANSFER_FORMS.AUSTRALIAN_BANK_TRANSFER,
    bankNameInput: false,
    bankClearingNumberInput: false,
    bsbInput: true,
    accountNumberInput: true,
    accountNameInput: true,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: false,
    swiftCodeInput: false,
    branchNameInput: false,
    walletAddressInput: false,
    optionalReferenceInput: false,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: false,
    abaBankNumberInput: false,
    beneficiaryBankAddress: false,
    needMock: false,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "Swiss Bank Transfer",
    id: "@jira(BCTGWEBPWU-437)",
    currency: CURRENCIES.CHF,
    form: BANK_TRANSFER_FORMS.SWISS_BANK_TRANSFER,
    bankNameInput: true,
    bankClearingNumberInput: true,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: true,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: true,
    swiftCodeInput: true,
    branchNameInput: false,
    walletAddressInput: false,
    optionalReferenceInput: false,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: false,
    abaBankNumberInput: false,
    beneficiaryBankAddress: false,
    needMock: false,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "PAN Bank Transfer",
    id: "@jira(BCTGWEBPWU-439)",
    currency: CURRENCIES.USD,
    form: BANK_TRANSFER_FORMS.PAN,
    bankNameInput: false,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: true,
    accountTypeInput: true,
    bankNicknameInput: true,
    bankAddressInput: false,
    swiftCodeInput: false,
    branchNameInput: false,
    walletAddressInput: false,
    optionalReferenceInput: false,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: false,
    abaBankNumberInput: false,
    beneficiaryBankAddress: false,
    needMock: false,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "Japan Bank Transfer",
    id: "@jira(BCTGWEBPWU-438)",
    currency: CURRENCIES.JPY,
    form: BANK_TRANSFER_FORMS.JAPAN_BANK_TRANSFER,
    bankNameInput: true,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: true,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: false,
    swiftCodeInput: false,
    branchNameInput: true,
    walletAddressInput: false,
    optionalReferenceInput: false,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: false,
    abaBankNumberInput: false,
    beneficiaryBankAddress: false,
    needMock: false,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "Signet Transfer",
    id: "@jira(BCTGWEBPWU-413)",
    currency: CURRENCIES.USD,
    form: BANK_TRANSFER_FORMS.SIGNET_TRANSFER,
    bankNameInput: false,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: false,
    accountNameInput: true,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: false,
    swiftCodeInput: false,
    branchNameInput: false,
    walletAddressInput: true,
    optionalReferenceInput: true,
    instruction: SIGNET_TRANSFER_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: false,
    abaBankNumberInput: false,
    beneficiaryBankAddress: false,
    needMock: false,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "Bank Wire",
    id: "@jira(BCTGWEBPWU-416)",
    currency: CURRENCIES.EUR,
    form: BANK_TRANSFER_FORMS.BANK_WIRE,
    bankNameInput: false,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: false,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: true,
    swiftCodeInput: true,
    branchNameInput: true,
    walletAddressInput: false,
    optionalReferenceInput: true,
    instruction: BANK_WIRE_INSTRUCTION,
    beneficiaryBankNameInput: true,
    beneficiaryNameInput: true,
    abaBankNumberInput: false,
    beneficiaryBankAddress: true,
    needMock: false,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "Generic Bank Transfer",
    id: "@jira(BCTGWEBPWU-418)",
    currency: CURRENCIES.USD,
    form: BANK_TRANSFER_FORMS.GENERIC_BANK_TRANSFER,
    bankNameInput: true,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: false,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: true,
    swiftCodeInput: false,
    branchNameInput: true,
    walletAddressInput: false,
    optionalReferenceInput: true,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: true,
    abaBankNumberInput: true,
    beneficiaryBankAddress: true,
    needMock: true,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "HK Bank Transfer",
    id: "@jira(BCTGWEBPWU-434)",
    currency: CURRENCIES.USD,
    form: BANK_TRANSFER_FORMS.HK_BANK_TRANSFER,
    bankNameInput: false,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: true,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: false,
    swiftCodeInput: false,
    branchNameInput: false,
    walletAddressInput: false,
    optionalReferenceInput: false,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: false,
    abaBankNumberInput: false,
    beneficiaryBankAddress: false,
    needMock: true,
    mockData: AM_BANK_METADATA,
  },
  {
    name: "Bank Sepa",
    id: "@jira(BCTGWEBPWU-435)",
    currency: CURRENCIES.GBP,
    form: BANK_TRANSFER_FORMS.SEPA,
    bankNameInput: true,
    bankClearingNumberInput: false,
    bsbInput: false,
    accountNumberInput: true,
    accountNameInput: false,
    accountTypeInput: false,
    bankNicknameInput: true,
    bankAddressInput: true,
    swiftCodeInput: true,
    branchNameInput: true,
    walletAddressInput: false,
    optionalReferenceInput: true,
    instruction: BASIC_INSTRUCTION,
    beneficiaryBankNameInput: false,
    beneficiaryNameInput: true,
    abaBankNumberInput: false,
    beneficiaryBankAddress: true,
    needMock: true,
    mockData: AM_BANK_METADATA,
  },
];
